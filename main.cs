using System;
using System.Threading;
using System.Globalization;

class Program
{
    static void DisplayTime()
    {
        DateTime utcNow = DateTime.UtcNow;
        string border = new string('‚ïê', 60);

        Console.WriteLine(border);
        Console.WriteLine("üåç Moscow / –ú–æ—Å–∫–≤–∞ / „É¢„Çπ„ÇØ„ÉØ (MSK): ".PadRight(30) + utcNow.AddHours(3).ToString("hh:mm:ss tt", CultureInfo.InvariantCulture));
        Console.WriteLine("üóΩ New York / –ù—å—é-–ô–æ—Ä–∫ / „Éã„É•„Éº„É®„Éº„ÇØ (EST): ".PadRight(30) + utcNow.AddHours(-5).ToString("hh:mm:ss tt", CultureInfo.InvariantCulture));
        Console.WriteLine("üåÅ London / –õ–æ–Ω–¥–æ–Ω / „É≠„É≥„Éâ„É≥ (GMT): ".PadRight(30) + utcNow.ToString("hh:mm:ss tt", CultureInfo.InvariantCulture));
        Console.WriteLine("üóº Tokyo / –¢–æ–∫–∏–æ / Êù±‰∫¨ (JST): ".PadRight(30) + utcNow.AddHours(9).ToString("hh:mm:ss tt", CultureInfo.InvariantCulture));
        Console.WriteLine("üåâ Sydney / –°–∏–¥–Ω–µ–π / „Ç∑„Éâ„Éã„Éº (AEDT): ".PadRight(30) + utcNow.AddHours(11).ToString("hh:mm:ss tt", CultureInfo.InvariantCulture));
        Console.WriteLine(border);
    }

    public static void Main(string[] args)
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;
        Console.Title = "World Time";
        Console.CursorVisible = false; 
        while (true)
        {
            Console.SetCursorPosition(0, 0); 
            DisplayTime();
            Thread.Sleep(1000);
        }
    }
}